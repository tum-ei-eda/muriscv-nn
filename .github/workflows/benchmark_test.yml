name: Benchmark Tests

on:
  workflow_dispatch:

jobs:
  Run_Benchmark:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        benchmark: [aww, vww, resnet, toycar]
        backend: [tvmaot, tflmi]
        toolchain: [gcc, llvm]

    steps:

    - uses: actions/checkout@v3

    - name: Install TFLM dependencies
      run: |
        sudo apt-get install python3-setuptools
        pip3 install wheel
        pip3 install Pillow
        pip3 install Wave

    - name: Get date of last cache build
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d' -d "last saturday")"

    - name: Download Cached GCC Binaries
      id: cache-gcc
      uses: actions/cache@v3
      env:
          cache-name: cache-gcc-binaries
      with:
          path: ./Toolchain
          # key: gcc-binaries-${{ steps.date.outputs.date }}
          key: gcc-binaries-2023-12-22
          restore-keys: |
            gcc-binaries-

    - name: Install Spike Dependencies
      run: |
        sudo apt-get install libboost-all-dev
        sudo apt-get install device-tree-compiler
        ls Toolchain/

    - name: Setup MLonMCU
      working-directory: ./Integration/MLonMCU
      run: |
        export PREBUILD_TVM=true
        python3 -m pip install --user virtualenv
        ./setup_mlonmcu.sh --enable-tflm --enable-tvm --enable-spike

    - name: Run ${{matrix.benchmark}} Benchmark
      working-directory: ./Integration/MLonMCU
      run: |
        set -e
        source common.sh
        source $VENV_DIR/bin/activate
        export MLONMCU_HOME=$WORKSPACE_DIR
        python gen_muriscnn_benchmarks.py -b ${{matrix.backend}} -t spike --vlen 64 --vlen 1024 --post -p --parallel 4 -f muriscvnn -f vext -f pext --autotuned --toolchain ${{matrix.toolchain}} --scalar-default-only --baseline $([[ "${{matrix.backend}}" == *"tvm"* ]] &&  echo 4 || echo 1) ${{matrix.benchmark}}

    - name: Get current date
      id: date-today
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"


    - name: Archive Benchmark Results
      uses: actions/upload-artifact@v3
      with:
          name: ${{matrix.benchmark}}-benchmark-${{matrix.backend}}-${{matrix.toolchain}}-${{ steps.date-today.outputs.date }}
          path: ./Integration/MLonMCU/out.csv


  Update_Wiki:
    runs-on: ubuntu-20.04
    needs: Run_Benchmark

    steps:

      - uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./Wiki

      - name: Download dependencies
        run: |
          pip install -r Wiki/requirements.txt

      - name: Get current date
        id: date-today
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create New Wiki Page
        working-directory: ./Wiki
        run: |
          source ../Integration/MLonMCU/common.sh
          python3 create_wiki.py */*.csv --split

      - name: Clone Wiki Repo
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki
          path: Wiki-repo

      - name: Push New Page to Wiki
        working-directory: ./Wiki-repo
        run: |
          ls
          cp ../Wiki/*.md .
          cp ../Wiki/*.csv .
          ls
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add *.md
          git add *.csv
          git commit -m "Added Benchmarks on ${{ steps.date-today.outputs.date }}"
          git push origin master
